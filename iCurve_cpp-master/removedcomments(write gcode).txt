	string Vertical_Drop_Position = to_string(mac1.get_vertical_drop());				

/*
	string advancement_home = to_string(mac1.get_advance_home_position());			// stall guard
	string advancement_run = to_string(mac1.get_advancement_run());					// get_advance_run_gap() ?
	string advancement_cam_eccentricity = to_string(mac1.get_advance_cam_eccen());
	string advancement_cam_diameter = to_string(mac1.get_advancement_cam_diameter());	// no equivalent - NEVER USED

	string front_home = to_string(mac1.get_front_home_position());											//  stall guard 
	string front_run = to_string(mac1.get_front_run());			// get_front_run_gap() ?
	string front_cam_eccentricity = to_string(mac1.get_front_cam_eccen());
	string front_cam_diameter = to_string(mac1.get_front_cam_diameter());	// no equivalent - NEVER USED

	string rear_home = to_string(mac1.get_rear_home_position());												//  stall guard
	string rear_run = to_string(mac1.get_rear_run());			// get_rear_run_gap() ?
	string rear_eccentricity = to_string(mac1.get_rear_cam_eccen());
	string rear_cam_diameter = to_string(mac1.get_rear_cam_diameter());	// no equivalent - NEVER USED

	string bend_home = to_string(mac1.get_pin_home_position());											//  stall guard
	string bend_neg_home = to_string(mac1.get_bending_home() * -1);		// no equivalent 
	string bend_run = to_string(mac1.get_bending_run());					// get_pin_run_angle()

	string rot_3d_home = mac1.get_3D_home_position();		// TBD- once we get a value, change to float value									//  stall guard
	string rot_3d_run = mac1.get_3D_run_position();			// TBD- once we get a value, change to float value

	string bend_vertical_home = to_string(mac1.get_bending_vertical_home());		// no equivalent				//  stall guard
	string bend_vertical_run = to_string(mac1.get_bending_vertical_run());		// no equivalent

	BELOW is the homing instructions (?)
*/
// vector<string> output{ "G21\nG28 G1 " + advance_motor + advancement_home + " " + front_grip_motor + front_home + " "
// 						 + rear_grip_motor + rear_home + " " + bend_motor + bend_home + " "+ rot3d_motor+rot_3d_home +" "
// 						 +bend_vertical_motor+ /*bend_vertical_home +*/
						 
						// "\nG1 " + advance_motor + /*advancement_run + */  " " 
						//  + front_grip_motor + /*front_run +*/ " " + rear_grip_motor + /*rear_run +*/ " " + bend_motor /*+ bend_run*/
						//  + " " + rot3d_motor + rot_3d_run + " " + bend_vertical_motor + /*bend_run +*/"\n"};			

	// home y z w

output.push_back(step);
		// 	if (code == "001") {
		// 		step = step + "G0 " + front_grip_motor + front_home + "\nG1 " + rot3d_motor + beta + "\nG0 " + front_grip_motor + /* front_run + */
		// 		"\nG0 " + rear_grip_motor + rear_home + "\nG1 " + rot3d_motor + rot_3d_home + "\nG0 " + rear_grip_motor + /*rear_run + */"\n";
		// 		// cout << "\n 001: Rotate 3d motor = " << rot3d_motor << endl;
		// 	}
		// 	else if (code == "101") {
		// 		step = step + "G0 " + front_grip_motor + front_home + "\nG1 " + advance_motor + index + "G1 " + rot3d_motor + beta + "\nG0 " + 
		// 		front_grip_motor + /* front_run +*/  "\nG0 " + rear_grip_motor + rear_home + "\nG1 " + rot3d_motor + rot_3d_home + "\nG0 " + rear_grip_motor + 
		// 		/*rear_run + */ "\nG0 " + rear_grip_motor + rear_home + "\nG1 " + advance_motor + advancement_home + "\nG0 " + rear_grip_motor + /*rear_run + */"\n";
		// 		// cout << "\n 101: Rotate 3d motor = " << rot3d_motor << endl;

		// 		nan += 1;
		// 		// cout << nan << "\n CODE 101: Advance motor = " << advance_motor << " Index = " << index << endl;			
		// 	}
		// 	else if (code == "110") {
				
		// 		if (table[i][1] < 0) {
		// 			if (side == false) {
		// 				step = step + "G0 " + front_grip_motor + front_home + "\nG1 " + advance_motor + index + "\nG0 " + front_grip_motor + front_home +
		// 				 "\nG4 P"+to_string(m.get_heat_on_delay()) + "\nG1 " + bend_motor + theta + "\nG4 P" + to_string(m.get_heat_off_delay()) + "\nG1 " 
		// 				 + bend_motor + bend_home + "\nG1 " + bend_motor + bend_home + "\nG0 " + rear_grip_motor + rear_home + "\nG1 " + advance_motor + 
		// 				 advancement_home + "\nG0 " + rear_grip_motor + rear_home + "\n";
		// 				 nan += 1;
						
		// 				//  cout << nan << "\n CODE 110 (IF SIDE == FALSE): Advance motor = " << advance_motor << " Index = " << index << endl;

		// 			}
		// 			else {
		// 				step = step + "G0 " + front_grip_motor + front_home + "\nG1 " + advance_motor + index + "\nG0 " + front_grip_motor + /* front_run + */ 
		// 				"\nG0 " + bend_vertical_motor + /*bend_vertical_home +*/ "\nG1 " + bend_motor + bend_home + "\nG0 " + bend_vertical_motor+ /*bend_vertical_home +*/
		// 				 "\nG4 P"+to_string(m.get_heat_on_delay()) + "\nG1 " + bend_motor + theta + "\nG4 P" + to_string(m.get_heat_off_delay()) + "\nG1 " + bend_motor 
		// 				 + bend_home +"\nG0 " +rear_grip_motor+rear_home+"\nG1 "+advance_motor+advancement_home+ "\nG0 "+ rear_grip_motor+rear_home +"\n";
		// 				side = false;
		// 				nan += 1;
		// 				// cout << nan << "\n CODE 110 (ELSE): Advance motor = " << advance_motor << " Index = " << index << endl;
		// 			}
		// 		}
				
		// 		else {
		// 			if (side == true) {
		// 				step = step + "G0 " + front_grip_motor + front_home + "\nG1 " + advance_motor + index + "\nG0 " + front_grip_motor + front_home + "\nG4 P"+ 
		// 				to_string(m.get_heat_on_delay()) + "\nG1 " + bend_motor + theta + "\nG4 P" + to_string(m.get_heat_off_delay()) + "\nG1 " + bend_motor + 
		// 				/*bend_neg_home +*/ "\nG0 " + rear_grip_motor + rear_home + "\nG1 " + advance_motor + advancement_home + "\nG0 " + rear_grip_motor + rear_home + "\n";
						
		// 				nan += 1;
		// 				// cout << nan << "\n CODE 110 (IF SIDE == TRUE): Advance motor = " << advance_motor << " Index = " << index << endl;

		// 			}
		// 			else {
		// 				step = step + "G0 " + front_grip_motor + front_home + "\nG1 " + advance_motor + index + "\nG0 " + front_grip_motor + /* front_run +*/ "\nG0 " +
		// 				 bend_vertical_motor + /* bend_vertical_home +*/ "\nG1 " + bend_motor + /*bend_neg_home +*/ "\nG0 " + bend_vertical_motor + /*bend_vertical_run +*/ "\nG4 P" +
		// 				  to_string(m.get_heat_on_delay()) + "\nG1 " + bend_motor + theta + "\nG4 P" + to_string(m.get_heat_off_delay()) + "\nG1 " + bend_motor + 
		// 				  /*bend_neg_home +*/ "\nG0 " + rear_grip_motor + rear_home + "\nG1 " + advance_motor + advancement_home + "\nG0 " + rear_grip_motor + rear_home + "\n";
		// 				nan += 1;
		// 				// cout << nan << "\n CODE 110 (IF SIDE == TRUE/ELSE): Advance motor = " << advance_motor << " Index = " << index << endl;					
						
		// 				side = true;
		// 			}
		// 		}
		// 	}
		// 	else if (code == "100") {
		// 		step = step + "G0 " + front_grip_motor + front_home + "\nG1 " + advance_motor + index + "\nG0 " + front_grip_motor + front_home + "\nG0 " + 
		// 		rear_grip_motor + rear_home + "\nG1 " + advance_motor + advancement_home + "\nG0 " + rear_grip_motor + /*rear_run +*/ "\n";

		// 		// if (index == "nan") {
		// 		// 	nan += 1;
		// 		// 	cout << nan << "\n CODE 100: Advance motor = " << advance_motor << " Index = " << index << endl;	
		// 		// } else {
		// 		// 	cout << "\n CODE 100: Advance motor = " << advance_motor << " Index = " << index << endl;
		// 		// }

		// 	}
		// 	output.push_back(step);